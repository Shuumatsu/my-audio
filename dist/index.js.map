{"version":3,"sources":["../src/index.js"],"names":["audioContext","window","AudioContext","audioDuration","audio","Promise","resolve","duration","addEventListener","AudioTemplate","HTMLElement","constructor","playButtonHandler","status","pauseButtonHandler","stopButtonHandler","volumeInputHandler","volume","volumeInput","value","shadowRoot","attachShadow","mode","template","document","querySelector","appendChild","content","cloneNode","nativeAudio","src","durationElement","then","textContent","download","href","audioSource","createMediaElementSource","analyserNode","createAnalyser","fftSize","smoothingTimeConstan","bufferLength","frequencyBinCount","dataArray","Uint8Array","connect","destination","visualization","draw","ctx","clearRect","width","height","getContext","getByteFrequencyData","sliceWidth","Math","floor","length","forEach","uint","i","fillStyle","fillRect","requestAnimationFrame","connectedCallback","clickActions","action","dash","replace","match","toLowerCase","changeActions","disconnectedCallback","removeEventListener","statusControl","pause","currentTime","play","modeControl","loop","attributeChangedCallback","attrName","oldVal","newVal","observedAttributes","attribute","Object","defineProperty","prototype","configurable","enumerable","get","getAttribute","set","val","setAttribute","customElements","define"],"mappings":"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","file":"index.js","sourcesContent":["// it's suggested that only one audioContext in one page\nconst audioContext = window.audioContext || new AudioContext()\n\nconst audioDuration = audio =>\n  new Promise(resolve => {\n    if (audio.duration) {\n      resolve(audio.duration)\n    }\n\n    audio.addEventListener('loadedmetadata', () => resolve(audio.duration))\n  })\n\nclass AudioTemplate extends HTMLElement {\n\n  static observedAttributes = ['src', 'volume', 'mode', 'show-lyrics', 'srcs', 'status']\n  static clickActions = ['playButton', 'pauseButton', 'stopButton']\n  static changeActions = ['volumeInput']\n\n  // too much work to do in constructor\n  // to be fixed\n  constructor() {\n    super()\n\n    const shadowRoot = this.attachShadow({ mode: 'open' })\n    const template = document.querySelector('#audio-template')\n    shadowRoot.appendChild(template.content.cloneNode(true))\n\n    this.nativeAudio = shadowRoot.querySelector('#native-audio')\n    this.nativeAudio.src = this.src\n\n    this.durationElement = shadowRoot.querySelector('#duration')\n    audioDuration(this.nativeAudio).then(duration => {\n      this.duration = duration\n      this.durationElement.textContent = duration\n    })\n\n    const download = shadowRoot.querySelector('#download')\n    download.href = this.src\n\n    this.audioSource = audioContext.createMediaElementSource(this.nativeAudio)\n    this.analyserNode = audioContext.createAnalyser()\n\n    this.analyserNode.fftSize = 64\n    this.analyserNode.smoothingTimeConstan = 0.85\n    const bufferLength = this.analyserNode.frequencyBinCount\n    this.dataArray = new Uint8Array(bufferLength)\n\n    this.audioSource.connect(this.analyserNode)\n    this.analyserNode.connect(audioContext.destination)\n\n    this.visualization = shadowRoot.querySelector('#visualization')\n  }\n\n  draw() {\n    if (this.status === 'stopped') ctx.clearRect(0, 0, visualization.width, visualization.height)\n    if (this.status !== 'playing') return\n\n    const visualization = this.visualization\n    const ctx = visualization.getContext('2d')\n    const analyserNode = this.analyserNode\n    const dataArray = this.dataArray\n\n    analyserNode.getByteFrequencyData(dataArray)\n\n    const sliceWidth = Math.floor(visualization.width / dataArray.length)\n\n    ctx.clearRect(0, 0, visualization.width, visualization.height)\n    dataArray.forEach((uint, i) => {\n      ctx.fillStyle = `rgb(${uint}, 50, 50)`\n      ctx.fillRect(i * sliceWidth, visualization.height - uint / 2, sliceWidth, uint)\n    })\n\n    requestAnimationFrame(() => this.draw())\n  }\n\n  playButtonHandler = () => this.status = 'playing'\n  pauseButtonHandler = () => this.status = 'paused'\n  stopButtonHandler = () => this.status = 'stopped'\n  volumeInputHandler = () => this.volume = this.volumeInput.value / 100\n\n  connectedCallback() {\n    AudioTemplate.clickActions.forEach(action => {\n      const dash = action.replace(/[A-Z]/g, match => '-' + match.toLowerCase())\n      this[action] = this.shadowRoot.querySelector(`#${dash}`)\n      this[action].addEventListener('click', this[`${action}Handler`])\n    })\n    AudioTemplate.changeActions.forEach(action => {\n      const dash = action.replace(/[A-Z]/g, match => '-' + match.toLowerCase())\n      this[action] = this.shadowRoot.querySelector(`#${dash}`)\n      this[action].addEventListener('change', this[`${action}Handler`])\n    })\n  }\n\n  disconnectedCallback() {\n    AudioTemplate.clickActions.forEach(action => {\n      this[action].removeEventListener('click', this[`${action}Handler`])\n    })\n    AudioTemplate.changeActions.forEach(action => {\n      this[action].removeEventListener('change', this[`${action}Handler`])\n    })\n  }\n\n  statusControl(status) {\n    switch (status) {\n      case 'stopped':\n        this.nativeAudio.pause()\n        this.nativeAudio.currentTime = 0\n        break\n      case 'playing':\n        this.nativeAudio.play()\n        this.draw()\n        break\n      case 'paused':\n        this.nativeAudio.pause()\n        break\n    }\n  }\n\n  modeControl(mode) {\n    switch (mode) {\n      case 'loop':\n        this.nativeAudio.loop = true\n        break\n      case 'random':\n\n        break\n      case 'sequential':\n        break\n    }\n  }\n\n  attributeChangedCallback(attrName, oldVal, newVal) {\n    switch (attrName) {\n      case 'status':\n        this.statusControl(newVal)\n        break\n      case 'src':\n        this.nativeAudio[attrName] = newVal\n        break\n      case 'volume':\n        this.nativeAudio.volume = newVal\n        break\n      default:\n    }\n  }\n}\n\nAudioTemplate.observedAttributes.forEach(attribute => {\n  Object.defineProperty(AudioTemplate.prototype, attribute, {\n    configurable: false,\n    enumerable: true,\n    get() {\n      return this.getAttribute(attribute)\n    },\n    set(val) {\n      // nil check\n      if (val == null) this.setAttribute(attribute)\n      else this.setAttribute(attribute, val)\n    }\n  })\n})\n\ncustomElements.define('audio-template', AudioTemplate)"]}